@{
    var showClass = IsVisible ? "show d-block" : "hide d-none";
}

<div class="modal fade @showClass"
    id="@Id"
    role="dialog"
    tabindex="-1"
    aria-modal="true"
    aria-labelledby="@Id"
    data-bs-backdrop="static" 
    data-bs-keyboard="false">

    <div class="modal-dialog modal-dialog-scrollable @GetAlign(DialogAlign)">
        <div class="modal-content">
            @if (Header != null)
            {
                <div class="modal-header">
                    @Header
                </div>
            }

            <div class="modal-body">
                @ChildContent
            </div>
            @if (Footer != null)
            {
                <div class="modal-footer">
                    @Footer
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; } = "modalDialog";

    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public Align DialogAlign { get; set; }

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }

    [Parameter]
    public RenderFragment? Header { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RenderFragment? Footer { get; set; }

    public enum Align
    {
        Default,
        VerticallyCenter
    }

    private string GetAlign(Align align)
    {
        switch (align)
        {
            case Align.Default: return "";
            case Align.VerticallyCenter: return "modal-dialog-centered";
            default: return "";
        }
    }
}
