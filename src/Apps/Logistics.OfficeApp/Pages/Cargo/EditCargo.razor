@page "/edit-cargo/{id?}"
@inherits ViewBase<EditCargoViewModel>

@{
    var headText = Model.EditMode ? "Edit" : "Add a new";
    var submitBtnText = Model.EditMode ? "Save" : "Submit";
}
<h2>@headText Cargo</h2>
<hr />
<div class="row">
    <div class="col-12 col-md-10 col-lg-8 col-xl-6">
        <div class="card">
            <div class="card-body">
                <Spinner IsBusy="Model.IsBusy"
                         Label="@Model.BusyText"
                         LabelAlign="Spinner.Align.Left"
                         Size="2">
                </Spinner>

                <EditForm Model="cargo" OnValidSubmit="() => Model.UpdateAsync()">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="source" class="form-label">Source Address</label>
                        <InputText id="source" class="form-control" @bind-Value="Model.Cargo.Source" />
                    </div>
                    <div class="mb-3">
                        <label for="destination" class="form-label">Destination Address</label>
                        <InputText id="destination" class="form-control" @bind-Value="Model.Cargo.Destination" />
                    </div>
                    <div class="mb-3">
                        <label for="pickupDate" class="form-label">Pick Up Date</label>
                        <InputDate id="pickupDate" class="form-control" @bind-Value="Model.Cargo.PickUpDate" />
                    </div>
                    <div class="mb-3">
                        <label for="price" class="form-label">Price Per Mile</label>
                        <div class="input-group">
                            <span class="input-group-text">$$</span>
                            <InputNumber id="price" class="form-control" @bind-Value="Model.Cargo.PricePerMile" 
                                min="@CargoConsts.MinPricePerMile" 
                                max="@CargoConsts.MaxPricePerMile" />
                        </div>
                        
                    </div>
                    <div class="mb-3">
                        <label for="totalTrip" class="form-label">Total Trip Miles</label>
                        <div class="input-group">
                            <span class="input-group-text">mi</span>
                            <InputNumber id="totalTrip" class="form-control" @bind-Value="Model.Cargo.TotalTripMiles" 
                                min="@CargoConsts.MinTripMiles" 
                                max="@CargoConsts.MaxTripMiles" />
                        </div>
                    </div>
                    @if (Model.EditMode)
                    {
                        <div class="mb-3">
                            <label for="completed" class="form-check-label">Is Completed</label>
                            <InputCheckbox id="completed" class="form-check-input mt-0 ms-1" @bind-Value="Model.Cargo.IsCompleted" />
                        </div>
                    }
                    <div class="mb-3">
                        <label for="dispatcher" class="form-label">Assigned Dispatcher</label>
                        <input id="dispatcher" class="form-control" type="text" value="@Model.Cargo.AssignedDispatcherName" readonly />
                    </div>
                    <div class="mb-3">
                        <label for="driver" class="form-label">Assigned Driver</label>
                        <DataList Id="driver" @bind-Value="Model.Cargo.AssignedTruckDriverName" OnInputChanged="Model.SearchDriverName"></DataList>
                    </div>
                    <div class="mb-3">
                        <label for="status" class="form-label">Status</label>
                        <InputSelect id="status" class="form-control" @bind-Value="Model.Cargo.Status">
                            <option value="OffDuty">Off Duty</option>
                            <option value="Loaded">Loaded</option>
                            <option value="Ready">Ready</option>
                        </InputSelect>
                    </div>
                </EditForm>
            </div>
            <div class="card-footer">
                <button class="btn btn-primary" type="submit">
                    <i class="bi bi-pencil-square"></i> @submitBtnText
                </button>
                <NavLink class="btn btn-primary" href="/list-cargo">
                    <i class="bi bi-arrow-left-square"></i> Back
                </NavLink>
            </div>
        </div>
    </div>
</div>

@code {
    private CargoDto cargo = new();

    [Parameter]
    public string? Id { get; set; }

    [CascadingParameter]
    public Toast? Toast { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Model.Cargo = cargo;
    }
}
