@page "/edit-employee/{id?}"
@attribute [Authorize(Roles = "admin,owner,manager")]
@inherits ViewBase<EditUserViewModel>

@{
    var headText = Model.EditMode ? "Edit" : "Add a new";
    var submitBtnText = Model.EditMode ? "Save" : "Submit";
}
<h2>@headText User</h2>
<hr />
<div class="row">
    <div class="col-12 col-md-10 col-lg-8 col-xl-6">
        <div class="card">
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.Error))
                {
                    <p class="text-danger">@Model.Error</p>
                }

                <Spinner IsBusy="Model.IsBusy"
                         Label="@Model.BusyText"
                         LabelAlign="Spinner.Align.Left"
                         Size="2">
                </Spinner>

                <EditForm Model="user" OnValidSubmit="() => Model.UpdateAsync()">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="username" class="form-label">User Name</label>
                        <InputText id="username" class="form-control" @bind-Value="Model.User.UserName" />
                    </div>
                    <div class="mb-3">
                        <label for="firstname" class="form-label">First Name</label>
                        <InputText id="firstname" class="form-control" @bind-Value="Model.User.FirstName" />
                    </div>
                    <div class="mb-3">
                        <label for="lastname" class="form-label">Last Name</label>
                        <InputText id="lastname" class="form-control" @bind-Value="Model.User.LastName" />
                    </div>
                    <div class="mb-3">
                        <label for="role" class="form-label">Role</label>
                        <InputSelect id="role" class="form-control" @bind-Value="Model.User.Role">
                            @foreach (var enumType in EmployeeRoles.GetValues())
                            {
                                <option value="@enumType.Value">@enumType.DisplayName</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="mt-3">
                        <button class="btn btn-primary" type="submit">
                            <i class="bi bi-pencil-square"></i> @submitBtnText
                        </button>
                        <NavLink class="btn btn-primary" href="/list-employee">
                            <i class="bi bi-arrow-left-square"></i> Back
                        </NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private EmployeeDto user = new();

    [Parameter]
    public string? Id { get; set; }

    [CascadingParameter]
    public Toast? Toast { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Model.User = user;
    }
}
